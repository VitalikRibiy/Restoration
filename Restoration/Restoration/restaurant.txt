-Створити клас Person. Утворити похідний класи Client і VipClient. який наслідується від Client.
	Визначити методи visitRestaurant та перевизначити його для VipClient.	
-Створити клас Restaurant. Клас повинен містити назву, адресу закладу, меню, список столиків 
	для бронювання, чорний список, список бронювань. Меню є окремим класом, що складається зі списку
	страв, повинне реалізовувати IEnumerable. Страви мають вагу (дробове число), вартість за 100гр, назву.
-Столик повинен містити номер, людину на яку бронюють, індикатор того чи столик для віп-клієнтів
	чи для всіх.
-Ресторан повинен містити методи для бронювання столику за номером для певного клієнта, зняття 
	бронювання (людина на яку бронюють стає null)
-Client може переглядати меню ресторану та список вільних столиків (але лише доступних їм), 
	створювати меню на вечір.
-VipClient може бронювати столики також ля віп-клієнтів.
-Клієнт може відвідати ресторан, після відвідування ресторану з його рахунку знімається вартість,
	вказана в меню, vip client отримує знижку 20%, віп клієнт обовязково платить чайові. 
	Якщо в клієнта немає достатньо грошей, то заносити його в чорний список ресторану і 
	не довзволяти замовляти столик поки він не оплатить попередні рахунки.
-Після відвідування ресторану, ресторан оповіщає всіх клієнтів, що підписались на отримання с
	повіщень, про те що звільнився столик. Перший клієнт в якого достатньо грошей на рухунку 
	і який ще не забронював столика, зможе забронювати звільнений столик, 
	решту чекатимуть наступних сповіщень.

Завдання
1. Зчитати з текстового файлу ресторан, зчитати меню ресторану, список столиків.
2. Створити кількох клієнтів і віп-клієнтів. Клієнтів повинно бути більше ніж столиків.
3. Показати кількість вільних столиків (використовуючи linq).
4. Зарезервувати всі столики.
5. Відвідати ресторан (передавши в метод меню на вечір) і сповістити  про вільний 
	столик людей які чекають (використати event).
6. Вивести найдорожчу і найдешевшу страву в ресторані (використовуючи linq).
7. Погрупувати страви по ціні (використовуючи linq)
8. Передбачити перевірки (можливо певні ексепшини), якщо вчинено дію, 
	що суперечить логікою завдання, наприклад бронювання зайнятого столика.
9. Вкінці відвідин повернути користувачу загальну вартість замовлення (використовуючи linq).
10. Дати відповідь на питання чи вигідно вам займатись ресторанним бізнесом, 
	якщо успішні ресторатори отримують в середньому 300-400грн за обслуговування 
	одного столика впродовж дня.

